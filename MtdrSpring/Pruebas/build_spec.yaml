version: 0.1
component: build
timeoutInSeconds: 10000
shell: bash
failImmediatelyOnError: true

env:
  variables:
    IMAGE_NAME: "telegram-test"
    IMAGE_VERSION: "0.1"
    DOCKER_REGISTRY: "qro.ocir.io/axs2pxpd649r/reacttodo/rkihw"
    JAVA_HOME: "/usr/lib64/graalvm/graalvm22-ee-java17"
    DOCKER_USERNAME: "axs2pxpd649r/prm-123@hotmail.com"
    DOCKER_PASSWORD: "7srs5zmwRFMBj]>VBrnL"
  exportedVariables:
    - IMAGE

steps:
  - type: Command
    name: Set Environment Variables
    shell: bash
    timeoutInSeconds: 300
    command: |
      if [ -z "$DOCKER_REGISTRY" ]; then
        echo "DOCKER_REGISTRY not set. Exiting..."
        exit 1
      fi
      export IMAGE=${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_VERSION}
      echo "Environment variables set: IMAGE=${IMAGE}"
      export PATH=$JAVA_HOME/bin:$PATH
      echo "PATH set to: $PATH"

  - type: Command
    name: Install Python 3.9 using pyenv
    shell: bash
    timeoutInSeconds: 600
    command: |
      echo "Installing dependencies..."
      sudo apt-get update -y
      sudo apt-get install -y make build-essential libssl-dev zlib1g-dev \
      libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
      libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev \
      liblzma-dev python-openssl git
      
      echo "Installing pyenv..."
      curl https://pyenv.run | bash
      export PATH="$HOME/.pyenv/bin:$PATH"
      eval "$(pyenv init --path)"
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"

      echo "Installing Python 3.9.7..."
      pyenv install 3.9.7
      pyenv global 3.9.7

      echo "Verifying Python version..."
      python --version

  - type: Command
    name: installing framework
    shell: bash
    timeoutInSeconds: 600
    command: |
      echo "Compiling and building application..."
      cd MtdrSpring/Pruebas
      pip install telethon
      if [ $? -ne 0 ]; then
        echo "Build failed!"
        exit 1
      fi
      echo "Build succeeded."

  - type: Command
    name: Run Application and Log Test Results
    shell: bash
    timeoutInSeconds: 600
    command: |
      echo "Running application and logging test results..."
      cd MtdrSpring/Pruebas
      python pruebas.py 

      if [ $? -ne 0 ]; then
        echo "Application run failed!"
        exit 1
      fi
      echo "Application run succeeded."
